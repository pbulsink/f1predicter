% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models_reg.R
\name{model_results_after_quali}
\alias{model_results_after_quali}
\title{Train Race Result Models (Post-Qualifying)}
\usage{
model_results_after_quali(
  data = clean_data(),
  engine = "ranger",
  save_model = TRUE
)
}
\arguments{
\item{data}{A data frame containing the modeling data. Defaults to `clean_data()`.}

\item{engine}{A character string specifying the model engine. One of `"ranger"`
(default), `"glmnet"`, `"nnet"`, `"kernlab"``, or `"kknn"`.}

\item{save_model}{A logical value. If `TRUE` (default), the trained models
are automatically butchered and saved to the path specified in
`options('f1predicter.models')`.}
}
\value{
A list containing five fitted `workflow` objects for `win`, `podium`,
  `t10`, `finish`, and `position`.
}
\description{
This function trains a suite of five classification models to predict race
results using data available *after* qualifying has completed. This includes
historical data, practice session metrics, and final qualifying results.

The function produces:
1. `win`: A binary classification model to predict if a driver will win the race.
2. `podium`: A binary classification model to predict if a driver will finish in the top 3.
3. `t10`: A binary classification model to predict if a driver will finish in the top 10.
4. `finish`: A binary classification model to predict if a driver will finish the race (not DNF).
5. `position`: A regression model to predict a driver's exact finishing position.
}
\details{
The function filters data for seasons from 2018 onwards. All models are
built using the specified engine, with hyperparameters tuned via a grid
search.

The four binary models (`win`, `podium`, `t10`, `finish`) are optimized on
the `mn_log_loss` metric. The `position` regression model is optimized
based on the `rmse` (Root Mean Squared Error) metric.
}
