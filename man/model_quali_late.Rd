% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models_reg.R
\name{model_quali_late}
\alias{model_quali_late}
\title{Train Late Qualifying Prediction Models}
\usage{
model_quali_late(data = clean_data(), engine = "xgboost")
}
\arguments{
\item{data}{A data frame containing the modeling data. Defaults to the output of `clean_data()`.}

\item{engine}{A character string specifying the model engine. One of "xgboost"
(default) or "glmnet".}
}
\value{
A list containing two fitted `workflow` objects: `quali_pole` and `quali_pos`.
}
\description{
This function trains two classification models to predict qualifying results using
data available *after* all practice sessions have occurred for a race weekend.
This model includes practice performance metrics as predictors.

The function produces:
1. A binary classification model (`quali_pole`) to predict if a driver will
   achieve pole position.
2. A multiclass classification model (`quali_pos`) to predict a driver's exact
   qualifying position (1-20).
}
\details{
The function first filters the input data to include seasons from 2018 onwards.
Both models are built using the `xgboost` engine. Hyperparameters are tuned
via `tune::tune_grid()` with a Latin hypercube grid search.

The pole position model is optimized by selecting the best model based on the
`mn_log_loss` metric. The qualifying position model is optimized based on the
`kap` (Cohen's Kappa) metric.

Upon completion, the function prints the final performance metrics of each
model (log loss, accuracy, AUC, etc.) to the console.
}
